name: Deploy to Fly.io

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  build-and-deploy:
    name: Build and Deploy Frontend to Fly.io
    runs-on: ubuntu-latest
    # TEMPORARILY DISABLED FOR LOCAL DEVELOPMENT BY ADDING "if: false &&"
    if: (github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true))

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Check for dependency changes
        id: deps-check
        run: |
          git diff HEAD~1 HEAD -- package.json yarn.lock > /dev/null 2>&1
          if [ $? -eq 0 ]; then
            echo "changes=true" >> $GITHUB_OUTPUT
          else
            echo "changes=false" >> $GITHUB_OUTPUT
          fi
        continue-on-error: true

      - name: Setup Fly.io CLI
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy to Fly.io
        run: |
          flyctl deploy --remote-only -a ludora-front \
            --build-arg VITE_API_BASE="${{ secrets.VITE_API_BASE }}" \
            --build-arg VITE_FIREBASE_API_KEY="${{ secrets.VITE_FIREBASE_API_KEY }}" \
            --build-arg VITE_FIREBASE_AUTH_DOMAIN="${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}" \
            --build-arg VITE_FIREBASE_PROJECT_ID="${{ secrets.VITE_FIREBASE_PROJECT_ID }}" \
            --build-arg VITE_FIREBASE_STORAGE_BUCKET="${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}" \
            --build-arg VITE_FIREBASE_MESSAGING_SENDER_ID="${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}" \
            --build-arg VITE_FIREBASE_APP_ID="${{ secrets.VITE_FIREBASE_APP_ID }}" \
            --build-arg VITE_FIREBASE_MEASUREMENT_ID="${{ secrets.VITE_FIREBASE_MEASUREMENT_ID }}"
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: Handle dependency changes
        if: steps.deps-check.outputs.changes == 'true'
        run: |
          echo "⚠️ Package.json/yarn.lock changes detected - dependencies will be updated on next build"
          echo "Fly.io automatically rebuilds with fresh dependencies when Dockerfile is used"

      - name: Health check
        run: |
          echo "Waiting for deployment to be ready..."
          sleep 30
          curl -f https://ludora.app/ || exit 1
          echo "✅ Frontend deployment successful and accessible!"