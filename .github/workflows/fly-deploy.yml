name: Deploy to Fly.io

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  build-and-deploy:
    name: Build and Deploy Frontend to Fly.io
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test
        env:
          NODE_ENV: test

      - name: Build application
        run: npm run build
        env:
          NODE_ENV: production
          VITE_API_BASE: https://ludora-api.fly.dev/api

      - name: Verify build output
        run: |
          echo "üîç Verifying build output..."

          # Check if dist directory exists
          if [ ! -d "dist" ]; then
            echo "‚ùå Build failed - dist directory not found"
            exit 1
          fi

          # Check if index.html exists
          if [ ! -f "dist/index.html" ]; then
            echo "‚ùå Build failed - index.html not found"
            exit 1
          fi

          # Check if assets directory exists (Vite creates this)
          if [ ! -d "dist/assets" ]; then
            echo "‚ùå Build failed - assets directory not found"
            exit 1
          fi

          # Check for essential files
          js_files=$(find dist/assets -name "*.js" | wc -l)
          css_files=$(find dist/assets -name "*.css" | wc -l)

          if [ "$js_files" -eq 0 ]; then
            echo "‚ùå Build failed - no JavaScript files found in assets"
            exit 1
          fi

          if [ "$css_files" -eq 0 ]; then
            echo "‚ùå Build failed - no CSS files found in assets"
            exit 1
          fi

          # Check build size (should be reasonable)
          build_size=$(du -sm dist | cut -f1)
          if [ "$build_size" -gt 100 ]; then
            echo "‚ö†Ô∏è Warning: Build size is ${build_size}MB (larger than expected)"
          fi

          echo "‚úÖ Build verification successful!"
          echo "üìä Build stats:"
          echo "   - JavaScript files: $js_files"
          echo "   - CSS files: $css_files"
          echo "   - Build size: ${build_size}MB"
          echo "   - Total files: $(find dist -type f | wc -l)"

          # List key files
          echo "üìÅ Build contents:"
          ls -la dist/
          echo "üìÅ Assets contents:"
          ls -la dist/assets/ | head -10

      - name: Setup Fly.io CLI
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy to Fly.io
        run: flyctl deploy --remote-only -a ludora-front
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: Health check
        run: |
          echo "Waiting for deployment to be ready..."
          sleep 30
          curl -f https://ludora-front.fly.dev/ || exit 1
          echo "‚úÖ Frontend deployment successful and accessible!"